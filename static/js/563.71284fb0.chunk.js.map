{"version":3,"file":"static/js/563.71284fb0.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ccc;\n  margin: 5px 0;\n  \n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #ff4f4f;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #d83535;\n  }\n`;","import { ListItem, DeleteButton } from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, contact, number, onDeleteContact }) => {\n  return (\n    <ListItem>\n      {contact}: {number}\n      <DeleteButton onClick={() => onDeleteContact(id)}>Delete</DeleteButton>\n    </ListItem>\n  );\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 10px;\n  margin: 0 auto;\n  width: 400px;\n  \n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  text-align: center;\n`; \n\n\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport { List, Title } from './ContactList.styled';\n\nconst ContactList = ({ contacts, filterTerm, onDeleteContact }) => {\n\nif (!contacts || !Array.isArray(contacts)) {\n    return;\n}\n\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filterTerm.toLowerCase()));\n\n  return (\n    <>\n    <Title>Contacts</Title>\n    <List>\n      {Array.isArray(filteredContacts) && filteredContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n          id={contact.id}\n        />\n      ))}\n    </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  width: 200px;\n`;","import { FilterContainer, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = ({ filterTerm, onFilterChange }) => {\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        <span>Filter contacts by name:</span>\n        <FilterInput\n          onChange={e => onFilterChange(e.target.value)}\n          value={filterTerm}\n          type=\"text\"\n        />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","export const selectContacts = state => state.phonebook.contacts;\nexport const selectContactsIsloading = state => state.phonebook.isLoading;\nexport const selectContactsError = state => state.phonebook.error;\nexport const selectContactsFilterTerm = state => state.phonebook.filterTerm;","import styled from 'styled-components';\n\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const Span = styled.span`\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;","import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport {\n  FormContainer,\n  Label,\n  Span,\n  Input,\n  Button,\n} from './ContactForm.styled';\n\nconst ContactForm = ({ onSubmit }) => {\nconst {\n  register,\n  handleSubmit,\n    formState: { errors },\n    reset,\n} = useForm();\n\n    const onSubmitHandler = data => {\n      onSubmit(data);\n      reset(); \n    };\n \n  return (\n    <FormContainer onSubmit={handleSubmit(onSubmitHandler)}>\n      <Label>\n        <Span>Name:</Span>\n        <Input {...register('name', { required: true })} type=\"text\" />\n        {errors.name && <span>This field is required</span>}\n      </Label>\n      <Label>\n        <Span>Number:</Span>\n        <Input {...register('number', { required: true })} type=\"text\" />\n        {errors.number && <span>This field is required</span>}\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n}\n\nexport default ContactForm","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n  setFilterTerm,\n} from 'redux/contactsReducer';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsFilterTerm,\n  selectContactsIsloading,\n} from 'redux/contactsSelectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsloading);\n  const error = useSelector(selectContactsError);\n  const filterTerm = useSelector(selectContactsFilterTerm);\n  const { reset } = useForm();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = contact => {\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleFilterChange = filterTerm => {\n    dispatch(setFilterTerm(filterTerm));\n  };\n  return (\n    <>\n      <ContactForm onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n\n      <Filter filterTerm={filterTerm} onFilterChange={handleFilterChange} />\n      <ContactList\n        contacts={contacts}\n        filterTerm={filterTerm}\n        onDeleteContact={onDeleteContact}\n      />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","DeleteButton","_templateObject2","_ref","id","contact","number","onDeleteContact","_jsxs","children","_jsx","onClick","List","Title","contacts","filterTerm","Array","isArray","filteredContacts","filter","name","toLowerCase","includes","_Fragment","map","ContactListItem","FilterContainer","FilterLabel","FilterInput","_templateObject3","onFilterChange","onChange","e","target","value","type","selectContacts","state","phonebook","selectContactsIsloading","isLoading","selectContactsError","error","selectContactsFilterTerm","FormContainer","Label","Span","Input","_templateObject4","Button","_templateObject5","onSubmit","_useForm","useForm","register","handleSubmit","errors","formState","reset","data","_objectSpread","required","message","className","dispatch","useDispatch","useSelector","useEffect","fetchContacts","ContactForm","addContact","Loader","ErrorMessage","Filter","setFilterTerm","ContactList","contactId","deleteContact"],"sourceRoot":""}